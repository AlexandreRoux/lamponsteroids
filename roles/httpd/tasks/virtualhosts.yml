# All websites should be stored under one directory.
# On CentOS it's usually /var/www. Make sure that this directory exists
#
- name: Make sure that main website directory exists
  file:
    path: "{{ httpd_websites_directory }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  tags: [httpd, virtualhosts]



# Each website is hosted in separate directory. Directory is named after domain name
# Example: /var/www/blacksaildivision.com
#
- name: Make sure that website directory exists
  file:
    path: "{{ httpd_websites_directory }}/{{ item.server_name }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  when: "(item.htdocs is not defined or item.htdocs == true) and (item.logs is not defined or item.logs == true)"
  with_items: "{{ httpd_virtualhosts }}"
  tags: [httpd, virtualhosts]



# Each website directory has htdocs and logs directory for storing website files and logs
# Example: /var/www/blacksaildivision.com/htdocs, /var/www/blacksaildivision.com/logs
#
- name: Make sure that website DocumentRoot directory exists
  file:
    path: "{{ httpd_websites_directory }}/{{ item.server_name }}/htdocs"
    state: directory
    mode: "2775"
    owner: "{{ item.directory_owner }}"
    group: "{{ item.directory_group }}"
  with_items: "{{ httpd_virtualhosts }}"
  when: "item.htdocs is not defined or item.htdocs == true"
  tags: [httpd, virtualhosts]

- name: Make sure that website logs directory exists
  file:
    path: "{{ httpd_websites_directory }}/{{ item.server_name }}/logs"
    state: directory
    mode: "2775"
    owner: "{{ item.directory_owner }}"
    group: "{{ item.directory_group }}"
  when: "item.logs is not defined or item.logs == true"
  with_items: "{{ httpd_virtualhosts }}"
  tags: [httpd, virtualhosts]



# Add Apache httpd VirtualHost files for each domain
#
- name: Add VirtualHosts files
  template:
    src: VirtualHost.conf.j2
    dest: "{{ httpd_install_path }}/conf/extra/httpd-vhost-{{ item.server_name }}{{ '-ssl' if item.https is defined and item.https == true else '' }}.conf"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ httpd_virtualhosts }}"
  notify: restart httpd
  tags: [httpd, virtualhosts, virtualhosts-update]



# Add created VirtualHost files to httpd.conf
#
- name: Add VirtualHost entries to httpd.conf file
  lineinfile:
    dest: "{{ httpd_config_file }}"
    line: "Include conf/extra/httpd-vhost-{{ item.server_name }}{{ '-ssl' if item.https is defined and item.https == true else '' }}.conf"
    state: present
    insertafter: EOF
  with_items: "{{ httpd_virtualhosts }}"
  notify: restart httpd
  tags: [httpd, virtualhosts, virtualhosts-update]

- name: Remove all unused VirtualHosts from httpd.conf file
  lineinfile:
    dest: "{{ httpd_config_file }}"
    regexp: "httpd-vhost-(?!{{ httpd_virtualhosts | map(attribute='server_name') | join('|') }})"
    state: absent
  notify: restart httpd
  tags: [httpd, virtualhosts, virtualhosts-update]



# Block access to server when accessing via Server IP
# When server IP address is called display 403 error
#
- name: Add 403 on accessing localhost
  template:
    src: localhost-VirtualHost.conf.j2
    dest: "{{ httpd_install_path }}/conf/extra/httpd-localhost.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart httpd
  when: "httpd_403_for_localhost == true"
  tags: [httpd, virtualhosts, virtualhosts-update]

- name: Add localhost VirtualHost entries to httpd.conf file
  lineinfile:
    dest: "{{ httpd_config_file }}"
    line: "Include conf/extra/httpd-localhost.conf"
    state: present
    insertafter: EOF
  notify: restart httpd
  when: "httpd_403_for_localhost == true"
  tags: [httpd, virtualhosts, virtualhosts-update]



# Setup logrotate for given VirtualHosts
# Each item must have logrotate set up. File will not be used if all have logrotate to false or logs to false
#
- set_fact:
    httpd_virtualhosts_with_logrotate: "{{ httpd_virtualhosts | rejectattr('logrotate', 'even') | list }}"
  tags: [httpd, virtualhosts]

- name: Setup logrotate for VirtualHosts
  template:
    src: logrotate.j2
    dest: "/etc/logrotate.d/httpd"
    owner: root
    group: root
    mode: 0644
  when: "httpd_virtualhosts_with_logrotate | length > 0"
  tags: [httpd, virtualhosts]
