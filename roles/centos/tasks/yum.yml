# Create a dump with list of all installed packages
# This task will execute only once
# Sometimes it's really useful to have an overview of installed packages on fresh system
# warn=no is for suppresing Ansible warning about not using yum module
#
- name: Dump installed packages
  shell: "yum list installed > {{ centos_yum_initial_package_list_path }} warn=no"
  args:
    creates: "{{ centos_yum_initial_package_list_path }}"
  tags: [centos, yum]



# Make sure that gpgcheck is enabled in Yum configuration.
# We should always check package signature before it's installation.
#
- name: Make sure that GPG check is enabled
  lineinfile:
    dest: /etc/yum.conf
    line: "gpgcheck=1"
    state: present
  tags: [centos, yum]



# Make sure that gpgcheck is enabled for all repositories
# This is the same check as above, but for all repo files in /etc/yum.repos.d directory
#
- name: Get all repositories for GPG check
  shell: find /etc/yum.repos.d -type f -name "*.repo" warn=no
  register: centos_yum_repositories
  changed_when: false
  tags: [centos, yum]

- name: Make sure that GPG check is enabled in all repositories
  lineinfile:
    dest: "{{ item }}"
    line: gpgcheck=0
    state: absent
  with_items: "{{ centos_yum_repositories.stdout_lines }}"
  tags: [centos, yum]



# Install delta RPM feature for more optimized and faster downloads of packages
#
- name: Install delta RPM
  yum:
    name: deltarpm
    state: latest
  tags: [centos, yum]



# Remove packages that are not necessary on the server
# Proceed with caution and make sure that we really don't need these packages.
# We can always get info about particular package with command: yum info PACKAGE_NAME_HERE
#
- name: Remove packages
  yum:
    name: "{{ item }}"
    state: removed
  with_items: "{{ centos_yum_unnecessary_packages }}"
  tags: [centos, yum]



# Update core packages.
# CentOS has some packages that can't be removed and they are required for proper server functioning.
# Let's update them in first place
- name: Update CentOS core packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ centos_yum_core_packages }}"
  tags: [centos, yum]



# There are also some packages that we want to keep in the latest versions as well.
# Update them to latest versions
#
- name: Update CentOS remaining packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ centos_yum_other_packages }}"
  tags: [centos, yum]



# CentOS minimal installation sometimes is missing nice tools. We should install them on the server
#
- name: Install additional packages
  yum:
    name: "{{ item }}"
    state: latest
  with_items: "{{ centos_yum_additional_tools }}"
  tags: [centos, yum]



# Remove unused packages with autoremove
# Package libselinux-python is required for Ansible templating and it should not be autoremoved
#
- name: Remove unused packages
  shell: yum autoremove --exclude="libselinux-python" -y | grep "Erasing" | awk '{print $3}' warn=no
  register: centos_yum_autoremove
  changed_when: "centos_yum_autoremove.stdout != ''"
  environment:
    LANG: C
  tags: [centos, yum]

- debug:
    msg: "List of autoremoved packages:"
  when: "centos_yum_autoremove.stdout != ''"
  tags: [centos, yum]

- debug:
    msg: "{{ centos_yum_autoremove.stdout_lines }}"
  when: "centos_yum_autoremove.stdout != ''"
  tags: [centos, yum]



# Check if there are packages not covered by this playbook.
# Sometimes there is the package that we have installed and it's marked for update.
# We can login to server and check if this package is really necessary there?
#
- name: Are there any packages left for update?
  shell: yum list updates | sed -e '1,/Updated Packages/d' warn=no
  register: centos_yum_more_packages_to_update
  changed_when: false
  environment:
    LANG: C
  tags: [centos, yum, healthcheck]

- debug:
    msg: "There are packges that were not updated! Please login to server and check them manually or try to re-run the playbook."
  when: "centos_yum_more_packages_to_update.stdout != ''"
  tags: [centos, yum, healthcheck]

- debug:
    msg: "{{ centos_yum_more_packages_to_update.stdout_lines }}"
  when: "centos_yum_more_packages_to_update.stdout != ''"
  tags: [centos, yum, healthcheck]



# Install cron for yum.
# It will check periodicaly for new versions of packages and it will donwload it on the server.
# Next time we will try to updated them, it will be quicker because they will be installed from disk
#
- name: Install cron for Yum
  yum:
    name: yum-cron
    state: latest
  tags: [centos, yum]



# yum-cron is awesome tool, but we shouldn't install them automatically.
# Auto updates can really mess up your system
#
- name: Disable automatic installation for yum-cron
  lineinfile:
    dest: /etc/yum/yum-cron.conf
    line: "apply_updates = no"
    state: present
  notify: restart yum-cron
  tags: [centos, yum]



# Make sure that yum-cron service is up and running
#
- name: Start yum cron service and enable it on start
  service:
    name: yum-cron
    state: started
    enabled: yes
  tags: [centos, yum, healthcheck]
