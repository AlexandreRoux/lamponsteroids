####### CHOOSE IF THIS ROLE SHOULD EXECUTE TASKS FROM GIVEN GROUPS #######

# Should this role use yum tasks for packages management?
centos_manage_yum: no

# Should this role use groups tasks for linux groups management?
centos_manage_groups: no

# Should this role use users tasks for linux users management?
centos_manage_users: yes





####### YUM TASKS CONFIGURATION #######

# Path to file where Ansible should storage information about list of installed packages.
centos_yum_initial_package_list_path: /etc/yum/initial-packages-list

# List of packages that should be removed from the server
centos_yum_unnecessary_packages:
 - gssproxy # leave it if you are using GSSAPI
 - libgudev1 # allow to connect to WiFi, not necessary on the server
 - mariadb-libs # leave it if you plan to use MariaDB instead of MySQL
 - NetworkManager # dependencies: libgudev1
 - NetworkManager-libnm # dependencies: libgudev1
 - NetworkManager-tui # dependencies: libgudev1
 - NetworkManager-wifi # dependencies: libgudev1
 - postfix # leave it if you plan to use postfix for mails, dependencies: mariadb-libs

# List of core packages that should be updated to latest versions
centos_yum_core_packages:
 - bash
 - chkconfig
 - dbus
 - dbus-libs # dependencies: dbus
 - dracut
 - glibc
 - glibc-common # dependencies: glibc
 - kpartx
 - krb5-libs
 - libblkid
 - libmount # dependencies: libblkid
 - libuuid # dependencies: libblkid
 - libssh2
 - libxml2
 - nspr
 - nss
 - nss-softokn
 - nss-softokn-freebl
 - nss-sysinit
 - nss-tools
 - nss-util
 - openldap
 - openssl-libs
 - pcre
 - python
 - python-libs # dependencies: python
 - systemd
 - systemd-libs # dependencies: systemd
 - systemd-sysv # dependencies: systemd
 - util-linux # dependencies: libblkid
 - tzdata

# List of other packages that should be updated to latest versions
centos_yum_other_packages:
 - authconfig # dependencies: openssl
 - bind-libs-lite
 - bind-license # dependencies: bind-libs-lite, dhclient, dracut-network, kexec-tools
 - cronie
 - cronie-anacron # dependencies: cronie
 - crontabs # dependencies: cronie
 - device-mapper-persistent-data
 - dhclient # depenencies: bind-libs-lite
 - dracut-network # dependencies: dracut, iproute, dhclient, bind-libs-lite
 - dracut-config-rescue # dependencies: dracut
 - epel-release
 - iproute
 - initscripts
 - kbd # dependencies: iproute
 - kernel
 - kernel-tools
 - kernel-tools-libs # dependencies: kernel-tools
 - kexec-tools # dependencies: dhclient, bind-libs-lite
 - lvm2 # dependencies: device-mapper-persistent-data
 - microcode_ctl
 - openssh # dependencies: openssh-clients, openssh-server
 - openssh-clients
 - openssh-server
 - openssl
 - python-perf
 - selinux-policy
 - selinux-policy-targeted # depenency of selinux-policy
 - sudo
 - tuned # dependencies: python-perf

# List of additional tools that are missing from CentOS minimal installation but are super useful
centos_yum_additional_tools:
 - net-tools # add netstat tool





####### GROUPS TASKS CONFIGURATION #######

# Path to file where initial list of available groups is stored
centos_groups_initial_groups_list_path: /etc/initial-group-list

# List of groups to remove from the system
centos_groups_to_remove: []

# List of available groups in the system
# In www group we usually have all applications that writes to files like php, httpd etc.
centos_groups_available:
 - www

# Should wheel group use sudo with password or without password?
# Security recommendation is to set this variable to "yes"
centos_groups_wheel_password_required: yes





####### USERS TASKS CONFIGURATION #######

# Path to file where initial list of existing users is stored
centos_users_initial_users_list_path: /etc/initial-users-list

# List of users to remove from the system
centos_users_to_remove: []

# List of available users
# If you want to give sudo power to the user, add him to "wheel" group
# Password should NOT be stored in plain text. To make it secure you should override it variable file and encrypt it with Ansible Vault
# If generate_ssh_key is set to yes, user will have 4096 bit RSA key in his profile
centos_users_available:
  - {
      username: developer,
      groups: 'wheel,www',
      password: "{{ centos_users_developer_password }}",
      generate_ssh_key: yes
    }

# You can't use plain text user passwords with Ansible
# Password must by encrypted with crypt with following command:
# python -c 'import crypt; print crypt.crypt("Pa$$w0rD", "$alt_here!@#")'
# You need to pass password and salt to crypt command.
# Please remember to use Ansible Vault for keeping such credentials in a safe way
centos_users_developer_password: $aarRtbtyIpN6

# Authorised keys to add to user
# Remember to change the path to file.
# Example path is ~/.ssh/id_rsa
centos_users_authorized_keys:
  - {
    username: developer,
    path_to_file: "/path/to/private/key"
  }
